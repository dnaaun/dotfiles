# https://castel.dev/post/lecture-notes-1/#context
global !p
texMathZones = ['texMathZone' + x for x in ['A', 'AS', 'B', 'BS', 'C', 'CS',
'D', 'DS', 'E', 'ES', 'F', 'FS', 'G', 'GS', 'H', 'HS', 'I', 'IS', 'J', 'JS',
'K', 'KS', 'L', 'LS', 'DS', 'V', 'W', 'X', 'Y', 'Z', 'AmsA', 'AmsB', 'AmsC',
'AmsD', 'AmsE', 'AmsF', 'AmsG', 'AmsAS', 'AmsBS', 'AmsCS', 'AmsDS', 'AmsES',
'AmsFS', 'AmsGS' ]]

texIgnoreMathZones = ['texMathText']

texMathZoneIds = vim.eval('map('+str(texMathZones)+", 'hlID(v:val)')")
texIgnoreMathZoneIds = vim.eval('map('+str(texIgnoreMathZones)+", 'hlID(v:val)')")

ignore = texIgnoreMathZoneIds[0]

def math():
	synstackids = vim.eval("synstack(line('.'), col('.') - (col('.')>=2 ? 1 : 0))")
	try:
		first = next(
            i for i in reversed(synstackids)
            if i in texIgnoreMathZoneIds or i in texMathZoneIds
        )
		return first != ignore
	except StopIteration:
		return False
endglobal

snippet hu "A \href{}{} link" w
\href{${1:${VISUAL:www.example.com}}}{${2:link}}
endsnippet

snippet hf "A \href{}{} link to file" w
\href{${1:./file.txt}}{${2:Name Of File}}
endsnippet


snippet t "\text{}" w
\text{${1:some text}}
endsnippet

snippet t "\text{}" w
\text{${1:some text}}
endsnippet

snippet f "\frac{}" w
\frac{${1:numer}}{${2:denom}}${3:}
endsnippet

snippet ^ "superscript" i
^{${1:sup}}${2:}
endsnippet

snippet _ "subscript" i
_{${1:sup}}${2:}
endsnippet

snippet up "\usepackage{}" wb
\usepackage{${1:}}
${2:}
endsnippet

snippet bd "\begin{document}" wb
\begin{document}
${1:${VISUAL:}}
\end{document}
endsnippet

# List items
snippet be "\begin{enumerate}" w
\begin{enumerate}
	\item ${1:${VISUAL:}}
\end{enumerate}${2:}
endsnippet

snippet bl "\begin{itemize} (l for list)" w
\begin{itemize}
	\item ${1:${VISUAL:}}
\end{itemize}${2:}
endsnippet


snippet ba "\begin{align}" w
\begin{align*}
	${1:${VISUAL:}}
\end{align*}
${2:}
endsnippet

# clipboard quote. Wrap whatever is in the clipboard into a \begin{qutoe} bock
# While doing so, make sure to check that the snippet is currently empty to avoid
# it being updated when the clipboard is updated.
snippet cq "\begin{quote}" w
\begin{quote}
	`!p
if not snip.c:
  snip.rv = vim.eval('@+')
`
\end{quote}

${1}
endsnippet
 

snippet bq "\begin{quote}" w
\begin{quote}
	${1:${VISUAL:}}
\end{quote}

${2:}
endsnippet

context "math()"
snippet bb "\mathbb{}"
\mathbb{${1:${VISUAL:}}}${2:}
endsnippet

context "math()"
snippet bi "binom" i
\binom{${1:n}, ${2:k}}
endsnippet


context "math()"
snippet b "\mathbf{}" i
\mathbf{${1:${VISUAL:}}}${2:}
endsnippet

snippet b "\textbf{}" i
\textbf{${1:${VISUAL:}}}${2:}
endsnippet

snippet i "\textit{}" w
\textit{${1:${VISUAL:}}}${2:}
endsnippet

snippet c "\cite{}" w
\cite${1:t}{${1:${VISUAL:}}}${3:}
endsnippet

snippet l "list item" w
\item ${1:${VISUAL}}
endsnippet


snippet se "\section*{}" w
\section{${1:${VISUAL:}}}
${2:}
endsnippet

snippet su "\subsection*{}" w
\subsection{${1:${VISUAL:}}}
${2:}
endsnippet

snippet ss "\subsubsection*{}" w
\subsubsection{${1:${VISUAL:}}}
${2:}
endsnippet

# https://castel.dev/post/lecture-notes-1/
snippet mk "Math" w
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
    snip.rv = ' '
else:
    snip.rv = ''
`$2
endsnippet


# Add some vertical space
snippet vs "\vspace{2cm}" bw
\vspace{2cm}
endsnippet

# WHen using paracols
snippet brc "begin right column" bw
\begin{rightcolumn*}
${1:${VISUAL:}}
\end{rightcolumn*}
${2}
endsnippet

snippet blc "begin left column" bw
\begin{leftcolumn}
${1:${VISUAL:}}
\end{leftcolumn}
${2}
endsnippet

snippet src "split right column" bw
\end{rightcolumn*}
\begin{leftcolumn}
${1:${VISUAL}}
\end{leftcolumn}
\begin{rightcolumn*}
${2}
endsnippet

snippet slc "split left column" bw
\end{leftcolumn}
\begin{rightcolumn*}
${1:${VISUAL}}
\end{rightcolumn*}
\begin{leftcolumn}
${2}
endsnippet

# Take notes in right column. I could use
# slc and then bl, but I do this frequently enough to justify it's own snippet.
snippet tn "take notes (in right column)" bw
\end{leftcolumn}
\begin{rightcolumn*}
\small
\begin{itemize}
\item ${1:${VISUAL}}
\end{itemize}
\end{rightcolumn*}
\begin{leftcolumn}
${2}
endsnippet


# Switchcolumn
snippet sc "\switchcolumn*" bw
\switchcolumn
endsnippet

snippet d "\ldots"
\ldots
endsnippet

snippet $ "inline math" w
$${1:${VISUAL:}}$ ${2:}
endsnippet

snippet ft "footnote" bw
\footnote{
  ${1:${VISUAL:}}
}
${2}
endsnippet

#### Beamer snippets ###########
snippet bf "\begin{frame}" wb
\begin{frame}
${1:${VISUAL:}}
\end{frame}
endsnippet

snippet ft "\frametitle{}" wb
\frametitle{${1:${VISUAL:}}}
endsnippet

snippet p "\pause" wb
\pause{}
endsnippet
