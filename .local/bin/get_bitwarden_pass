#!/usr/bin/env python3

import sys
from urllib.parse import urlparse
import platform
import os
import json
from subprocess import PIPE, Popen
try:
    from pyperclip import copy
except ImportError as e:
    raise Exception(f"{e}. sys.path={sys.path} executable={sys.executable}")

if (url := os.environ.get("QUTE_URL", "")) and (hostname := urlparse(url).hostname):
    hostname_args = ["--url", hostname]
else:
    hostname_args = []

try:

    proc = Popen(
    ["bw", "list", "items"] + hostname_args,
    text=True,
    stdout=PIPE,
    stderr=PIPE,
    env=os.environ,
)
except FileNotFoundError as e:
    raise Exception(f"{e}: $PATH={os.environ.get('PATH')}")

if proc.stdout and proc.stderr:
    txt = proc.stdout.read()
    err_txt = proc.stderr.read()
    try:
        items = json.loads(txt)
    except json.decoder.JSONDecodeError:
        raise Exception(
            "Couldn't parse: "
            + txt
            + ". Because of stderr: "
            + err_txt
            + f". and environ was {json.dumps(os.environ.copy(), indent=2)}"
        )
else:
    raise Exception("Proc has no stdout or stdin")

pwds = []
prompts = []

for i, item in enumerate(items):
    if (login := item.get("login")) and login.get("password"):
        pwds.append(login["password"])
        uris = ", ".join(u["uri"] for u in login.get("uris", []))
        prompts.append(
            str(i)
            + (" | " + (item["name"] or "NO NAME"))
            + (" | " + (login["username"] or "NO USERNAME"))
            + (" | " + uris)
        )

if platform.system() == 'Linux':
    fuzzy_chooser_cmd = [ 'fzf', '-dmenu' ]
elif platform.system() == 'Darwin':
    fuzzy_chooser_cmd = ['choose']
else:
    raise Exception("Don't know a fuzzy chooser on windows.")

proc = Popen(fuzzy_chooser_cmd, stdin=PIPE, stdout=PIPE, text=True)

stdout, stderr = proc.communicate(input="\n".join(prompts))
if proc.stdout:
    possib_num =stdout.strip().split(" | ")[0]
    if possib_num: # Pressed <C-c> probably.
        idx = int(possib_num)
        copy(pwds[idx])
else:
    print("Proc has no stdout")
    sys.exit()
